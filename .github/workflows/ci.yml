name: CI Pipeline

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  run-tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests (CI report)
        run: npm run test:ci

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: jest-report
          path: jest-report.json

  build:
    name: Build (packaging)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Package artifacts
        run: |
          mkdir -p package
          cp -R dist package/
          tar -czf package.tar.gz package

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-package
          path: package.tar.gz

  notify:
    name: Notify when both workflows succeed
    runs-on: ubuntu-latest
    needs: [run-tests, build]
    if: ${{ needs.run-tests.result == 'success' && needs.build.result == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install runtime dependencies
        run: npm ci

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-package

      - name: Extract package and run notifier
        env:
          RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          TEST_RESULT: ${{ needs.run-tests.result }}
          BUILD_RESULT: ${{ needs.build.result }}
          WORKFLOW_STATUS: ${{ job.status }}
        run: |
          echo "Extracting package.tar.gz"
          mkdir -p package && tar -xzf package.tar.gz -C package
          echo "Running notifier from package/dist/scripts/sendNotificationCli.js"
          node package/dist/scripts/sendNotificationCli.js
