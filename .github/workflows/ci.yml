name: CI Pipeline

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  run-tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: System setup (runner)
        run: ./scripts/setup.sh
        shell: bash

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests (CI report)
        run: npm run test:ci

      - name: Upload test report and coverage
        uses: actions/upload-artifact@v4
        with:
          name: jest-report
          path: |
            jest-report.json
            coverage/
          if-no-files-found: warn
          retention-days: 7

  build:
    name: Build (packaging)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: System setup (runner)
        run: ./scripts/setup.sh
        shell: bash

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Package artifacts
        run: |
          mkdir -p package
          cp -R dist package/
          tar -czf package.tar.gz package

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-package
          path: package.tar.gz
          retention-days: 7

  notify:
    name: Notify (always, with results)
    runs-on: ubuntu-latest
    needs: [run-tests, build]
    # Sempre roda para informar sucesso/falha (exigência do enunciado)
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install runtime dependencies
        run: npm ci

      - name: Download build artifact (only if build succeeded)
        if: ${{ needs.build.result == 'success' }}
        uses: actions/download-artifact@v4
        with:
          name: build-package

      - name: Extract package
        if: ${{ needs.build.result == 'success' }}
        run: |
          echo "Extracting package.tar.gz"
          mkdir -p package && tar -xzf package.tar.gz -C package

      - name: Notify by e-mail
        env:
          RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          TEST_RESULT: ${{ needs.run-tests.result }}
          BUILD_RESULT: ${{ needs.build.result }}
          WORKFLOW_STATUS: ${{ job.status }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          GIT_SHA: ${{ github.sha }}
          GIT_REF: ${{ github.ref }}
        run: |
          # Se o build tiver sucesso e o pacote existir, roda o CLI do pacote;
          # caso contrário, roda o CLI direto do repositório (usa node_modules instalados aqui).
          if [ -f "package/dist/scripts/sendNotificationCli.js" ]; then
            node package/dist/scripts/sendNotificationCli.js
          else
            # fallback (caso o build tenha falhado, mas queremos avisar mesmo assim)
            node dist/scripts/sendNotificationCli.js || node src/scripts/sendNotificationCli.js
          fi
