name: CI Pipeline

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm ci
      - name: Run tests (CI report)
        run: npm run test:ci
      - name: Upload test report and coverage
        uses: actions/upload-artifact@v4
        with:
          name: jest-report
          path: |
            jest-report.json
            coverage/
          if-no-files-found: warn
          retention-days: 7

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm ci
      - name: Run linter
        run: npm run lint
      - name: Upload lint report (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: |
            eslint-report.* 
            reports/eslint/**/*
          if-no-files-found: ignore
          retention-days: 7

  cypress:
    name: cypress
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm ci
      # adapte este script ao que você já usa (start server, etc.)
      - name: Run Cypress (CI)
        run: npm run cy:ci
      - name: Upload Cypress artifacts (videos/screenshots)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts
          path: |
            cypress/videos/
            cypress/screenshots/
          if-no-files-found: ignore
          retention-days: 7

  build:
    name: build
    runs-on: ubuntu-latest
    needs: [test] # build só depois de TEST
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm ci
      - name: Build project
        run: npm run build
      - name: Package artifacts
        run: |
          mkdir -p package
          cp -R dist package/
          tar -czf package.tar.gz package
      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-package
          path: package.tar.gz
          retention-days: 7

  notify:
    name: notify
    runs-on: ubuntu-latest
    needs: [test, build, lint, cypress] # consolida tudo no e-mail
    if: always() # SEMPRE avisa (sucesso ou falha)
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci

      - name: Download build artifact (only if build succeeded)
        if: ${{ needs.build.result == 'success' }}
        uses: actions/download-artifact@v4
        with:
          name: build-package

      - name: Extract package
        if: ${{ needs.build.result == 'success' }}
        run: |
          echo "Extracting package.tar.gz"
          mkdir -p package && tar -xzf package.tar.gz -C package

      - name: Notify by e-mail
        env:
          RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          TEST_RESULT: ${{ needs.test.result }}
          BUILD_RESULT: ${{ needs.build.result }}
          LINT_RESULT: ${{ needs.lint.result }}
          CYPRESS_RESULT: ${{ needs.cypress.result }}
          WORKFLOW_STATUS: ${{ job.status }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          GIT_SHA: ${{ github.sha }}
          GIT_REF: ${{ github.ref }}
        run: |
          # Se o build gerou pacote, usa o CLI do pacote; senão, usa o do repo.
          if [ -f "package/dist/scripts/sendNotificationCli.js" ]; then
            node package/dist/scripts/sendNotificationCli.js
          else
            node dist/scripts/sendNotificationCli.js || node src/scripts/sendNotificationCli.js
          fi
